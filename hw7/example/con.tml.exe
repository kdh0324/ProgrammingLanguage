Machine code:
_Constructor_Cons_:
	return
_Constructor_Nil_:
	return
_Start_CSE_321_HW7_:
	// APP
	malloc CP <- 2
	move (CP + 0) <- &_Constructor_Cons_
	malloc (CP + 1) <- 2
	push CP
	// PAIR
	malloc CP <- 1
	move (CP + 0) <- &_Constructor_Nil_
	push CP
	malloc R[29] <- 2
	move (R[29] + 0) <- 1
	move (R[29] + 1) <- *(SP + -1)
	push R[29]
	move TR <- *(SP + -3)
	move (TR + 1) <- *(SP + -1)
	call *(TR + 0)
	push TR
	push *(SP + -1)
	move AX <- *(SP + -1)
	pop R[29]
	pop R[29]
	pop R[29]
	pop R[29]
	pop R[29]
	halt AX


Execution begins at 4:
4   _Start_CSE_321_HW7_:
5   	// APP
6   	malloc CP <- 2
7   	move (CP + 0) <- &_Constructor_Cons_
8   	malloc (CP + 1) <- 2
9   	push CP
10   	// PAIR
11   	malloc CP <- 1
12   	move (CP + 0) <- &_Constructor_Nil_
13   	push CP
14   	malloc R[29] <- 2
15   	move (R[29] + 0) <- 1
16   	move (R[29] + 1) <- *(SP + -1)
17   	push R[29]
18   	move TR <- *(SP + -3)
19   	move (TR + 1) <- *(SP + -1)
20   	call *(TR + 0)
0   _Constructor_Cons_:
1   	return
21   	push TR
22   	push *(SP + -1)
23   	move AX <- *(SP + -1)
24   	pop R[29]
25   	pop R[29]
26   	pop R[29]
27   	pop R[29]
28   	pop R[29]
29   	halt AX

Stack(0) = 

&Heap_3 = [0] = 1 [1] = &Heap_2
&Heap_2 = [0] = &_Constructor_Nil_
&Heap_1 = [0] = 0 [1] = 0
&Heap_0 = [0] = &_Constructor_Cons_ [1] = &Heap_3

Execution statistics
	code size = 25
	max stack = 4
	max heap = 7
	instructions executed = 24
	memory read = 13
	memory write = 13
	register read = 26
	register write = 24
Total time cost = 574
Total memory cost = 36

Normal termination
	Result = HEAP_&0: [|LABEL__Constructor_Cons_||HEAP_&3: [|1||HEAP_&2: [|LABEL__Constructor_Nil_|]|]|]
